<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.3 (Python 3.8.2 on win32)" generated="20210529 23:10:47.687" rpa="false" schemaversion="2">
<suite id="s1" name="Venv" source="C:\Test cases\untitled2\venv">
<suite id="s1-s1" name="Test2" source="C:\Test cases\untitled2\venv\Test2.robot">
<test id="s1-s1-t1" name="From two tables">
<kw name="Test Setup" type="SETUP">
<msg timestamp="20210529 23:10:48.067" level="TRACE">Arguments: [  ]</msg>
<kw name="Create Session" library="Req">
<arg>alias</arg>
<arg>http://localhost:3000</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210529 23:10:48.068" level="TRACE">Arguments: [ 'alias' | 'http://localhost:3000' ]</msg>
<msg timestamp="20210529 23:10:48.068" level="INFO">Creating Session using : alias=alias, url=http://localhost:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210529 23:10:48.068" level="DEBUG">Creating session: alias</msg>
<msg timestamp="20210529 23:10:48.068" level="TRACE">Return: &lt;requests.sessions.Session object at 0x000001F74FA568E0&gt;</msg>
<status status="PASS" starttime="20210529 23:10:48.067" endtime="20210529 23:10:48.068"/>
</kw>
<kw name="Connect To Postgresql" library="DB">
<arg>hadb</arg>
<arg>ha</arg>
<arg>password2021dljfklkla1!kljf;</arg>
<arg>localhost</arg>
<arg>8432</arg>
<doc>Connection to Postgres DB.</doc>
<msg timestamp="20210529 23:10:48.068" level="TRACE">Arguments: [ 'hadb' | 'ha' | 'password2021dljfklkla1!kljf;' | 'localhost' | '8432' ]</msg>
<msg timestamp="20210529 23:10:48.069" level="DEBUG">Connecting using : dbhost=localhost, dbport=8432, dbname=hadb, dbusername=ha, dbpassword=password2021dljfklkla1!kljf;, alias=None</msg>
<msg timestamp="20210529 23:10:48.122" level="TRACE">Return: 1</msg>
<status status="PASS" starttime="20210529 23:10:48.068" endtime="20210529 23:10:48.122"/>
</kw>
<msg timestamp="20210529 23:10:48.122" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.067" endtime="20210529 23:10:48.122"/>
</kw>
<kw name="Get On Session" library="Req">
<var>${resp}</var>
<arg>alias</arg>
<arg>/products?</arg>
<arg>params=select=title,actor,categories(categoryname)&amp;title=like.ACADEMY_I*</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210529 23:10:48.123" level="TRACE">Arguments: [ 'alias' | '/products?' | params='select=title,actor,categories(categoryname)&amp;title=like.ACADEMY_I*' ]</msg>
<msg timestamp="20210529 23:10:48.129" level="DEBUG">Starting new HTTP connection (1): localhost:3000</msg>
<msg timestamp="20210529 23:10:48.140" level="DEBUG">http://localhost:3000 "GET /products?select=title,actor,categories(categoryname)&amp;title=like.ACADEMY_I* HTTP/1.1" 200 None</msg>
<msg timestamp="20210529 23:10:48.141" level="INFO">GET Request : url=http://localhost:3000/products?select=title,actor,categories(categoryname)&amp;title=like.ACADEMY_I* 
 path_url=/products?select=title,actor,categories(categoryname)&amp;title=like.ACADEMY_I* 
 headers={'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210529 23:10:48.141" level="INFO">GET Response : url=http://localhost:3000/products?select=title,actor,categories(categoryname)&amp;title=like.ACADEMY_I* 
 status=200, reason=OK 
 headers={'Transfer-Encoding': 'chunked', 'Date': 'Sat, 29 May 2021 20:10:48 GMT', 'Server': 'postgrest/7.0.1 (UNKNOWN)', 'Content-Encoding': 'gzip', 'Content-Type': 'application/json; charset=utf-8', 'Content-Range': '0-25/*', 'Content-Location': '/products?select=title%2Cactor%2Ccategories%28categoryname%29&amp;title=like.ACADEMY_I%2A'} 
 body=[{"title":"ACADEMY ICE","actor":"PEARL LANSBURY","categories":{"categoryname":"Music"}}, 
 {"title":"ACADEMY IDAHO","actor":"WARREN SMITH","categories":{"categoryname":"Foreign"}}, 
 {"title":"ACADEMY IDENTITY","actor":"SALLY BACALL","categories":{"categoryname":"Drama"}}, 
 {"title":"ACADEMY IDOLS","actor":"ZERO CAGE","categories":{"categoryname":"Action"}}, 
 {"title":"ACADEMY IGBY","actor":"DARYL RICKMAN","categories":{"categoryname":"Documentary"}}, 
 {"title":"ACADEMY ILLUSION","actor":"GROUCHO BAILEY","categories":{"categoryname":"Comedy"}}, 
 {"title":"ACADEMY IMAGE","actor":"CUBA WILSON","categories":{"categoryname":"Sports"}}, 
 {"title":"ACADEMY IMPACT","actor":"HELEN HUDSON","categories":{"categoryname":"Music"}}, 
 {"title":"ACADEMY IMPOSSIBLE","actor":"RIP GARBO","categories":{"categoryname":"Animation"}}, 
 {"title":"ACADEMY INCH","actor":"TOM PACINO","categories":{"categoryname":"Children"}}, 
 {"title":"ACADEMY INDEPENDENCE","actor":"GEOFFREY BLOOM","categories":{"categoryname":"Children"}}, 
 {"title":"ACADEMY INDIAN","actor":"NATALIE BEATTY","categories":{"categoryname":"Sci-Fi"}}, 
 {"title":"ACADEMY INFORMER","actor":"FARRAH MONROE","categories":{"categoryname":"Drama"}}, 
 {"title":"ACADEMY INNOCENT","actor":"WHOOPI DUNST","categories":{"categoryname":"Family"}}, 
 {"title":"ACADEMY INSECTS","actor":"AL KAHN","categories":{"categoryname":"Family"}}, 
 {"title":"ACADEMY INSIDER","actor":"SYLVESTER ANISTON","categories":{"categoryname":"Horror"}}, 
 {"title":"ACADEMY INSTINCT","actor":"CARRIE HANNAH","categories":{"categoryname":"New"}}, 
 {"title":"ACADEMY INTENTIONS","actor":"MICHAEL TAYLOR","categories":{"categoryname":"Comedy"}}, 
 {"title":"ACADEMY INTERVIEW","actor":"DREW CAMPBELL","categories":{"categoryname":"Children"}}, 
 {"title":"ACADEMY INTOLERABLE","actor":"BURT THERON","categories":{"categoryname":"Family"}}, 
 {"title":"ACADEMY INTRIGUE","actor":"WOODY WEST","categories":{"categoryname":"Comedy"}}, 
 {"title":"ACADEMY INVASION","actor":"SYLVESTER OLIVIER","categories":{"categoryname":"Comedy"}}, 
 {"title":"ACADEMY IRON","actor":"ELLEN HORNE","categories":{"categoryname":"Family"}}, 
 {"title":"ACADEMY ISHTAR","actor":"ANTHONY DAY-LEWIS","categories":{"categoryname":"Animation"}}, 
 {"title":"ACADEMY ISLAND","actor":"HARVEY SPACEK","categories":{"categoryname":"Sports"}}, 
 {"title":"ACADEMY ITALIAN","actor":"LIAM MARX","categories":{"categoryname":"Action"}}] 
 </msg>
<msg timestamp="20210529 23:10:48.142" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20210529 23:10:48.142" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210529 23:10:48.123" endtime="20210529 23:10:48.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210529 23:10:48.143" level="TRACE">Arguments: [ [{'actor': 'PEARL LANSBURY',
  'categories': {'categoryname': 'Music'},
  'title': 'ACADEMY ICE'},
 {'actor': 'WARREN SMITH',
  'categories': {'categoryname': 'Foreign'},
  'title': 'ACADEMY IDAHO'},
 {'actor': 'SALLY BACALL',
  'categories': {'categoryname': 'Drama'},
  'title': 'ACADEMY IDENTITY'},
 {'actor': 'ZERO CAGE',
  'categories': {'categoryname': 'Action'},
  'title': 'ACADEMY IDOLS'},
 {'actor': 'DARYL RICKMAN',
  'categories': {'categoryname': 'Documentary'},
  'title': 'ACADEMY IGBY'},
 {'actor': 'GROUCHO BAILEY',
  'categories': {'categoryname': 'Comedy'},
  'title': 'ACADEMY ILLUSION'},
 {'actor': 'CUBA WILSON',
  'categories': {'categoryname': 'Sports'},
  'title': 'ACADEMY IMAGE'},
 {'actor': 'HELEN HUDSON',
  'categories': {'categoryname': 'Music'},
  'title': 'ACADEMY IMPACT'},
 {'actor': 'RIP GARBO',
  'categories': {'categoryname': 'Animation'},
  'title': 'ACADEMY IMPOSSIBLE'},
 {'actor': 'TOM PACINO',
  'categories': {'categoryname': 'Children'},
  'title': 'ACADEMY INCH'},
 {'actor': 'GEOFFREY BLOOM',
  'categories': {'categoryname': 'Children'},
  'title': 'ACADEMY INDEPENDENCE'},
 {'actor': 'NATALIE BEATTY',
  'categories': {'categoryname': 'Sci-Fi'},
  'title': 'ACADEMY INDIAN'},
 {'actor': 'FARRAH MONROE',
  'categories': {'categoryname': 'Drama'},
  'title': 'ACADEMY INFORMER'},
 {'actor': 'WHOOPI DUNST',
  'categories': {'categoryname': 'Family'},
  'title': 'ACADEMY INNOCENT'},
 {'actor': 'AL KAHN',
  'categories': {'categoryname': 'Family'},
  'title': 'ACADEMY INSECTS'},
 {'actor': 'SYLVESTER ANISTON',
  'categories': {'categoryname': 'Horror'},
  'title': 'ACADEMY INSIDER'},
 {'actor': 'CARRIE HANNAH',
  'categories': {'categoryname': 'New'},
  'title': 'ACADEMY INSTINCT'},
 {'actor': 'MICHAEL TAYLOR',
  'categories': {'categoryname': 'Comedy'},
  'title': 'ACADEMY INTENTIONS'},
 {'actor': 'DREW CAMPBELL',
  'categories': {'categoryname': 'Children'},
  'title': 'ACADEMY INTERVIEW'},
 {'actor': 'BURT THERON',
  'categories': {'categoryname': 'Family'},
  'title': 'ACADEMY INTOLERABLE'},
 {'actor': 'WOODY WEST',
  'categories': {'categoryname': 'Comedy'},
  'title': 'ACADEMY INTRIGUE'},
 {'actor': 'SYLVESTER OLIVIER',
  'categories': {'categoryname': 'Comedy'},
  'title': 'ACADEMY INVASION'},
 {'actor': 'ELLEN HORNE',
  'categories': {'categoryname': 'Family'},
  'title': 'ACADEMY IRON'},
 {'actor': 'ANTHONY DAY-LEWIS',
  'categories': {'categoryname': 'Animation'},
  'title': 'ACADEMY ISHTAR'},
 {'actor': 'HARVEY SPACEK',
  'categories': {'categoryname': 'Sports'},
  'title': 'ACADEMY ISLAND'},
 {'actor': 'LIAM MARX',
  'categories': {'categoryname': 'Action'},
  'title': 'ACADEMY ITALIAN'}] ]</msg>
<msg timestamp="20210529 23:10:48.148" level="INFO">[{'title': 'ACADEMY ICE', 'actor': 'PEARL LANSBURY', 'categories': {'categoryname': 'Music'}}, {'title': 'ACADEMY IDAHO', 'actor': 'WARREN SMITH', 'categories': {'categoryname': 'Foreign'}}, {'title': 'ACADEMY IDENTITY', 'actor': 'SALLY BACALL', 'categories': {'categoryname': 'Drama'}}, {'title': 'ACADEMY IDOLS', 'actor': 'ZERO CAGE', 'categories': {'categoryname': 'Action'}}, {'title': 'ACADEMY IGBY', 'actor': 'DARYL RICKMAN', 'categories': {'categoryname': 'Documentary'}}, {'title': 'ACADEMY ILLUSION', 'actor': 'GROUCHO BAILEY', 'categories': {'categoryname': 'Comedy'}}, {'title': 'ACADEMY IMAGE', 'actor': 'CUBA WILSON', 'categories': {'categoryname': 'Sports'}}, {'title': 'ACADEMY IMPACT', 'actor': 'HELEN HUDSON', 'categories': {'categoryname': 'Music'}}, {'title': 'ACADEMY IMPOSSIBLE', 'actor': 'RIP GARBO', 'categories': {'categoryname': 'Animation'}}, {'title': 'ACADEMY INCH', 'actor': 'TOM PACINO', 'categories': {'categoryname': 'Children'}}, {'title': 'ACADEMY INDEPENDENCE', 'actor': 'GEOFFREY BLOOM', 'categories': {'categoryname': 'Children'}}, {'title': 'ACADEMY INDIAN', 'actor': 'NATALIE BEATTY', 'categories': {'categoryname': 'Sci-Fi'}}, {'title': 'ACADEMY INFORMER', 'actor': 'FARRAH MONROE', 'categories': {'categoryname': 'Drama'}}, {'title': 'ACADEMY INNOCENT', 'actor': 'WHOOPI DUNST', 'categories': {'categoryname': 'Family'}}, {'title': 'ACADEMY INSECTS', 'actor': 'AL KAHN', 'categories': {'categoryname': 'Family'}}, {'title': 'ACADEMY INSIDER', 'actor': 'SYLVESTER ANISTON', 'categories': {'categoryname': 'Horror'}}, {'title': 'ACADEMY INSTINCT', 'actor': 'CARRIE HANNAH', 'categories': {'categoryname': 'New'}}, {'title': 'ACADEMY INTENTIONS', 'actor': 'MICHAEL TAYLOR', 'categories': {'categoryname': 'Comedy'}}, {'title': 'ACADEMY INTERVIEW', 'actor': 'DREW CAMPBELL', 'categories': {'categoryname': 'Children'}}, {'title': 'ACADEMY INTOLERABLE', 'actor': 'BURT THERON', 'categories': {'categoryname': 'Family'}}, {'title': 'ACADEMY INTRIGUE', 'actor': 'WOODY WEST', 'categories': {'categoryname': 'Comedy'}}, {'title': 'ACADEMY INVASION', 'actor': 'SYLVESTER OLIVIER', 'categories': {'categoryname': 'Comedy'}}, {'title': 'ACADEMY IRON', 'actor': 'ELLEN HORNE', 'categories': {'categoryname': 'Family'}}, {'title': 'ACADEMY ISHTAR', 'actor': 'ANTHONY DAY-LEWIS', 'categories': {'categoryname': 'Animation'}}, {'title': 'ACADEMY ISLAND', 'actor': 'HARVEY SPACEK', 'categories': {'categoryname': 'Sports'}}, {'title': 'ACADEMY ITALIAN', 'actor': 'LIAM MARX', 'categories': {'categoryname': 'Action'}}]</msg>
<msg timestamp="20210529 23:10:48.149" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.142" endtime="20210529 23:10:48.149"/>
</kw>
<kw name="Test Teardown" type="TEARDOWN">
<msg timestamp="20210529 23:10:48.150" level="TRACE">Arguments: [  ]</msg>
<kw name="Delete All Sessions" library="Req">
<doc>Removes all the session objects</doc>
<msg timestamp="20210529 23:10:48.150" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20210529 23:10:48.151" level="INFO">Deleting All Sessions</msg>
<msg timestamp="20210529 23:10:48.151" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.150" endtime="20210529 23:10:48.151"/>
</kw>
<kw name="Disconnect From Postgresql" library="DB">
<doc>Close active PostgreSQL connection.
You will have to manually open or switch to a new connection.
Due to how ConnectionCache works, connection's index and alias are not removed from cache, so you are able to switch to
closed connection, if it was closed with Disconnect from Postgresql. It will still remain closed though.</doc>
<msg timestamp="20210529 23:10:48.151" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20210529 23:10:48.151" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.151" endtime="20210529 23:10:48.151"/>
</kw>
<msg timestamp="20210529 23:10:48.153" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.149" endtime="20210529 23:10:48.153"/>
</kw>
<status status="PASS" starttime="20210529 23:10:48.065" endtime="20210529 23:10:48.153"/>
</test>
<test id="s1-s1-t2" name="Create and check">
<kw name="Test Setup" type="SETUP">
<msg timestamp="20210529 23:10:48.155" level="TRACE">Arguments: [  ]</msg>
<kw name="Create Session" library="Req">
<arg>alias</arg>
<arg>http://localhost:3000</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210529 23:10:48.157" level="TRACE">Arguments: [ 'alias' | 'http://localhost:3000' ]</msg>
<msg timestamp="20210529 23:10:48.157" level="INFO">Creating Session using : alias=alias, url=http://localhost:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210529 23:10:48.157" level="DEBUG">Creating session: alias</msg>
<msg timestamp="20210529 23:10:48.157" level="TRACE">Return: &lt;requests.sessions.Session object at 0x000001F74FAB66A0&gt;</msg>
<status status="PASS" starttime="20210529 23:10:48.156" endtime="20210529 23:10:48.157"/>
</kw>
<kw name="Connect To Postgresql" library="DB">
<arg>hadb</arg>
<arg>ha</arg>
<arg>password2021dljfklkla1!kljf;</arg>
<arg>localhost</arg>
<arg>8432</arg>
<doc>Connection to Postgres DB.</doc>
<msg timestamp="20210529 23:10:48.158" level="TRACE">Arguments: [ 'hadb' | 'ha' | 'password2021dljfklkla1!kljf;' | 'localhost' | '8432' ]</msg>
<msg timestamp="20210529 23:10:48.158" level="DEBUG">Connecting using : dbhost=localhost, dbport=8432, dbname=hadb, dbusername=ha, dbpassword=password2021dljfklkla1!kljf;, alias=None</msg>
<msg timestamp="20210529 23:10:48.209" level="TRACE">Return: 2</msg>
<status status="PASS" starttime="20210529 23:10:48.157" endtime="20210529 23:10:48.209"/>
</kw>
<msg timestamp="20210529 23:10:48.210" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.155" endtime="20210529 23:10:48.210"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>category=99</arg>
<arg>categoryname=test</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210529 23:10:48.210" level="TRACE">Arguments: [ 'category=99' | 'categoryname=test' ]</msg>
<msg timestamp="20210529 23:10:48.211" level="TRACE">Return: {'category': '99', 'categoryname': 'test'}</msg>
<msg timestamp="20210529 23:10:48.211" level="INFO">&amp;{data} = { category=99 | categoryname=test }</msg>
<status status="PASS" starttime="20210529 23:10:48.210" endtime="20210529 23:10:48.211"/>
</kw>
<kw name="Post On Session" library="Req">
<var>${req}</var>
<arg>alias</arg>
<arg>/categories?</arg>
<arg>${data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210529 23:10:48.211" level="TRACE">Arguments: [ 'alias' | '/categories?' | {'category': '99', 'categoryname': 'test'} ]</msg>
<msg timestamp="20210529 23:10:48.211" level="DEBUG">Starting new HTTP connection (1): localhost:3000</msg>
<msg timestamp="20210529 23:10:48.228" level="DEBUG">http://localhost:3000 "POST /categories HTTP/1.1" 201 None</msg>
<msg timestamp="20210529 23:10:48.229" level="INFO">POST Request : url=http://localhost:3000/categories 
 path_url=/categories 
 headers={'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '29', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=category=99&amp;categoryname=test 
 </msg>
<msg timestamp="20210529 23:10:48.229" level="INFO">POST Response : url=http://localhost:3000/categories 
 status=201, reason=Created 
 headers={'Transfer-Encoding': 'chunked', 'Date': 'Sat, 29 May 2021 20:10:48 GMT', 'Server': 'postgrest/7.0.1 (UNKNOWN)', 'Location': '/categories?category=eq.99', 'Content-Range': '*/*'} 
 body=None 
 </msg>
<msg timestamp="20210529 23:10:48.229" level="TRACE">Return: &lt;Response [201]&gt;</msg>
<msg timestamp="20210529 23:10:48.229" level="INFO">${req} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210529 23:10:48.211" endtime="20210529 23:10:48.229"/>
</kw>
<kw name="Get On Session" library="Req">
<var>${resp}</var>
<arg>alias</arg>
<arg>/categories?</arg>
<arg>params=select=category,categoryname&amp;category=eq.99</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210529 23:10:48.229" level="TRACE">Arguments: [ 'alias' | '/categories?' | params='select=category,categoryname&amp;category=eq.99' ]</msg>
<msg timestamp="20210529 23:10:48.236" level="DEBUG">http://localhost:3000 "GET /categories?select=category,categoryname&amp;category=eq.99 HTTP/1.1" 200 None</msg>
<msg timestamp="20210529 23:10:48.236" level="INFO">GET Request : url=http://localhost:3000/categories?select=category,categoryname&amp;category=eq.99 
 path_url=/categories?select=category,categoryname&amp;category=eq.99 
 headers={'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210529 23:10:48.238" level="INFO">GET Response : url=http://localhost:3000/categories?select=category,categoryname&amp;category=eq.99 
 status=200, reason=OK 
 headers={'Transfer-Encoding': 'chunked', 'Date': 'Sat, 29 May 2021 20:10:48 GMT', 'Server': 'postgrest/7.0.1 (UNKNOWN)', 'Content-Encoding': 'gzip', 'Content-Type': 'application/json; charset=utf-8', 'Content-Range': '0-0/*', 'Content-Location': '/categories?category=eq.99&amp;select=category%2Ccategoryname'} 
 body=[{"category":99,"categoryname":"test"}] 
 </msg>
<msg timestamp="20210529 23:10:48.238" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20210529 23:10:48.238" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210529 23:10:48.229" endtime="20210529 23:10:48.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210529 23:10:48.238" level="TRACE">Arguments: [ [{'category': 99, 'categoryname': 'test'}] ]</msg>
<msg timestamp="20210529 23:10:48.238" level="INFO">[{'category': 99, 'categoryname': 'test'}]</msg>
<msg timestamp="20210529 23:10:48.238" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.238" endtime="20210529 23:10:48.238"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${SQL}</var>
<arg>select * from bootcamp.categories where category = %(category)s</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210529 23:10:48.238" level="TRACE">Arguments: [ 'select * from bootcamp.categories where category = %(category)s' ]</msg>
<msg timestamp="20210529 23:10:48.238" level="TRACE">Return: 'select * from bootcamp.categories where category = %(category)s'</msg>
<msg timestamp="20210529 23:10:48.238" level="INFO">${SQL} = select * from bootcamp.categories where category = %(category)s</msg>
<status status="PASS" starttime="20210529 23:10:48.238" endtime="20210529 23:10:48.238"/>
</kw>
<kw name="Execute Sql String Mapped" library="DB">
<var>@{result}</var>
<arg>${SQL}</arg>
<arg>&amp;{data}</arg>
<doc>SQL query execution where each result row is mapped as a dict with column names as keys.</doc>
<msg timestamp="20210529 23:10:48.238" level="TRACE">Arguments: [ 'select * from bootcamp.categories where category = %(category)s' | category='99' | categoryname='test' ]</msg>
<msg timestamp="20210529 23:10:48.238" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;Running PL/PGSQL statement&lt;/summary&gt;&lt;p&gt;select * from bootcamp.categories where category = %(category)s&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210529 23:10:48.247" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;SQL Query Result&lt;/summary&gt;&lt;p&gt;[{&amp;#x27;category&amp;#x27;: 99, &amp;#x27;categoryname&amp;#x27;: &amp;#x27;test&amp;#x27;}]&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210529 23:10:48.249" level="TRACE">Return: [{'category': 99, 'categoryname': 'test'}]</msg>
<msg timestamp="20210529 23:10:48.250" level="INFO">@{result} = [ {'category': 99, 'categoryname': 'test'} ]</msg>
<status status="PASS" starttime="20210529 23:10:48.238" endtime="20210529 23:10:48.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210529 23:10:48.250" level="TRACE">Arguments: [ [{'category': 99, 'categoryname': 'test'}] ]</msg>
<msg timestamp="20210529 23:10:48.250" level="INFO">[{'category': 99, 'categoryname': 'test'}]</msg>
<msg timestamp="20210529 23:10:48.250" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.250" endtime="20210529 23:10:48.251"/>
</kw>
<kw name="Delete On Session" library="Req">
<var>${req}</var>
<arg>alias</arg>
<arg>/categories?</arg>
<arg>params=select=category,categoryname&amp;category=eq.99</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20210529 23:10:48.251" level="TRACE">Arguments: [ 'alias' | '/categories?' | params='select=category,categoryname&amp;category=eq.99' ]</msg>
<msg timestamp="20210529 23:10:48.260" level="DEBUG">http://localhost:3000 "DELETE /categories?select=category,categoryname&amp;category=eq.99 HTTP/1.1" 204 0</msg>
<msg timestamp="20210529 23:10:48.261" level="INFO">DELETE Request : url=http://localhost:3000/categories?select=category,categoryname&amp;category=eq.99 
 path_url=/categories?select=category,categoryname&amp;category=eq.99 
 headers={'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20210529 23:10:48.261" level="INFO">DELETE Response : url=http://localhost:3000/categories?select=category,categoryname&amp;category=eq.99 
 status=204, reason=No Content 
 headers={'Date': 'Sat, 29 May 2021 20:10:48 GMT', 'Server': 'postgrest/7.0.1 (UNKNOWN)', 'Content-Range': '*/*'} 
 body=None 
 </msg>
<msg timestamp="20210529 23:10:48.261" level="TRACE">Return: &lt;Response [204]&gt;</msg>
<msg timestamp="20210529 23:10:48.261" level="INFO">${req} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20210529 23:10:48.251" endtime="20210529 23:10:48.261"/>
</kw>
<kw name="Test Teardown" type="TEARDOWN">
<msg timestamp="20210529 23:10:48.262" level="TRACE">Arguments: [  ]</msg>
<kw name="Delete All Sessions" library="Req">
<doc>Removes all the session objects</doc>
<msg timestamp="20210529 23:10:48.262" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20210529 23:10:48.262" level="INFO">Deleting All Sessions</msg>
<msg timestamp="20210529 23:10:48.262" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.262" endtime="20210529 23:10:48.262"/>
</kw>
<kw name="Disconnect From Postgresql" library="DB">
<doc>Close active PostgreSQL connection.
You will have to manually open or switch to a new connection.
Due to how ConnectionCache works, connection's index and alias are not removed from cache, so you are able to switch to
closed connection, if it was closed with Disconnect from Postgresql. It will still remain closed though.</doc>
<msg timestamp="20210529 23:10:48.263" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20210529 23:10:48.263" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.263" endtime="20210529 23:10:48.263"/>
</kw>
<msg timestamp="20210529 23:10:48.263" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.261" endtime="20210529 23:10:48.263"/>
</kw>
<status status="PASS" starttime="20210529 23:10:48.154" endtime="20210529 23:10:48.264"/>
</test>
<test id="s1-s1-t3" name="Create and check from bd">
<kw name="Test Setup" type="SETUP">
<msg timestamp="20210529 23:10:48.265" level="TRACE">Arguments: [  ]</msg>
<kw name="Create Session" library="Req">
<arg>alias</arg>
<arg>http://localhost:3000</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210529 23:10:48.266" level="TRACE">Arguments: [ 'alias' | 'http://localhost:3000' ]</msg>
<msg timestamp="20210529 23:10:48.266" level="INFO">Creating Session using : alias=alias, url=http://localhost:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210529 23:10:48.266" level="DEBUG">Creating session: alias</msg>
<msg timestamp="20210529 23:10:48.266" level="TRACE">Return: &lt;requests.sessions.Session object at 0x000001F74FAC0FD0&gt;</msg>
<status status="PASS" starttime="20210529 23:10:48.265" endtime="20210529 23:10:48.267"/>
</kw>
<kw name="Connect To Postgresql" library="DB">
<arg>hadb</arg>
<arg>ha</arg>
<arg>password2021dljfklkla1!kljf;</arg>
<arg>localhost</arg>
<arg>8432</arg>
<doc>Connection to Postgres DB.</doc>
<msg timestamp="20210529 23:10:48.267" level="TRACE">Arguments: [ 'hadb' | 'ha' | 'password2021dljfklkla1!kljf;' | 'localhost' | '8432' ]</msg>
<msg timestamp="20210529 23:10:48.269" level="DEBUG">Connecting using : dbhost=localhost, dbport=8432, dbname=hadb, dbusername=ha, dbpassword=password2021dljfklkla1!kljf;, alias=None</msg>
<msg timestamp="20210529 23:10:48.323" level="TRACE">Return: 3</msg>
<status status="PASS" starttime="20210529 23:10:48.267" endtime="20210529 23:10:48.323"/>
</kw>
<msg timestamp="20210529 23:10:48.323" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.265" endtime="20210529 23:10:48.324"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>category=99</arg>
<arg>categoryname=test</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210529 23:10:48.324" level="TRACE">Arguments: [ 'category=99' | 'categoryname=test' ]</msg>
<msg timestamp="20210529 23:10:48.324" level="TRACE">Return: {'category': '99', 'categoryname': 'test'}</msg>
<msg timestamp="20210529 23:10:48.325" level="INFO">${params} = {'category': '99', 'categoryname': 'test'}</msg>
<status status="PASS" starttime="20210529 23:10:48.324" endtime="20210529 23:10:48.325"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${SQL}</var>
<arg>INSERT into bootcamp.categories (category, categoryname) VALUES (%(category)s ,%(categoryname)s)</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210529 23:10:48.325" level="TRACE">Arguments: [ 'INSERT into bootcamp.categories (category, categoryname) VALUES (%(category)s ,%(categoryname)s)' ]</msg>
<msg timestamp="20210529 23:10:48.325" level="TRACE">Return: 'INSERT into bootcamp.categories (category, categoryname) VALUES (%(category)s ,%(categoryname)s)'</msg>
<msg timestamp="20210529 23:10:48.325" level="INFO">${SQL} = INSERT into bootcamp.categories (category, categoryname) VALUES (%(category)s ,%(categoryname)s)</msg>
<status status="PASS" starttime="20210529 23:10:48.325" endtime="20210529 23:10:48.325"/>
</kw>
<kw name="Execute Plpgsql Block" library="DB">
<var>@{result}</var>
<arg>${SQL}</arg>
<arg>&amp;{params}</arg>
<doc>PL/PGSQL block execution.
For parametrized SQL queries please consider psycopg2 guide on the subject:
http://initd.org/psycopg/docs/usage.html#passing-parameters-to-sql-queries</doc>
<msg timestamp="20210529 23:10:48.326" level="TRACE">Arguments: [ 'INSERT into bootcamp.categories (category, categoryname) VALUES (%(category)s ,%(categoryname)s)' | category='99' | categoryname='test' ]</msg>
<msg timestamp="20210529 23:10:48.326" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;Running PL/PGSQL statement&lt;/summary&gt;&lt;p&gt;INSERT into bootcamp.categories (category, categoryname) VALUES (%(category)s ,%(categoryname)s)&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210529 23:10:48.345" level="TRACE">Return: None</msg>
<msg timestamp="20210529 23:10:48.345" level="INFO">@{result} = [ ]</msg>
<status status="PASS" starttime="20210529 23:10:48.326" endtime="20210529 23:10:48.345"/>
</kw>
<kw name="Get On Session" library="Req">
<var>${resp}</var>
<arg>alias</arg>
<arg>/categories?</arg>
<arg>params=select=category,categoryname&amp;category=eq.99</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210529 23:10:48.346" level="TRACE">Arguments: [ 'alias' | '/categories?' | params='select=category,categoryname&amp;category=eq.99' ]</msg>
<msg timestamp="20210529 23:10:48.348" level="DEBUG">Starting new HTTP connection (1): localhost:3000</msg>
<msg timestamp="20210529 23:10:48.358" level="DEBUG">http://localhost:3000 "GET /categories?select=category,categoryname&amp;category=eq.99 HTTP/1.1" 200 None</msg>
<msg timestamp="20210529 23:10:48.359" level="INFO">GET Request : url=http://localhost:3000/categories?select=category,categoryname&amp;category=eq.99 
 path_url=/categories?select=category,categoryname&amp;category=eq.99 
 headers={'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210529 23:10:48.359" level="INFO">GET Response : url=http://localhost:3000/categories?select=category,categoryname&amp;category=eq.99 
 status=200, reason=OK 
 headers={'Transfer-Encoding': 'chunked', 'Date': 'Sat, 29 May 2021 20:10:48 GMT', 'Server': 'postgrest/7.0.1 (UNKNOWN)', 'Content-Encoding': 'gzip', 'Content-Type': 'application/json; charset=utf-8', 'Content-Range': '0-0/*', 'Content-Location': '/categories?category=eq.99&amp;select=category%2Ccategoryname'} 
 body=[{"category":99,"categoryname":"test"}] 
 </msg>
<msg timestamp="20210529 23:10:48.359" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20210529 23:10:48.360" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210529 23:10:48.345" endtime="20210529 23:10:48.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210529 23:10:48.362" level="TRACE">Arguments: [ [{'category': 99, 'categoryname': 'test'}] ]</msg>
<msg timestamp="20210529 23:10:48.363" level="INFO">[{'category': 99, 'categoryname': 'test'}]</msg>
<msg timestamp="20210529 23:10:48.363" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.360" endtime="20210529 23:10:48.363"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${SQL}</var>
<arg>select * from bootcamp.categories where category = %(category)s</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210529 23:10:48.364" level="TRACE">Arguments: [ 'select * from bootcamp.categories where category = %(category)s' ]</msg>
<msg timestamp="20210529 23:10:48.364" level="TRACE">Return: 'select * from bootcamp.categories where category = %(category)s'</msg>
<msg timestamp="20210529 23:10:48.364" level="INFO">${SQL} = select * from bootcamp.categories where category = %(category)s</msg>
<status status="PASS" starttime="20210529 23:10:48.363" endtime="20210529 23:10:48.365"/>
</kw>
<kw name="Execute Sql String Mapped" library="DB">
<var>@{result}</var>
<arg>${SQL}</arg>
<arg>&amp;{params}</arg>
<doc>SQL query execution where each result row is mapped as a dict with column names as keys.</doc>
<msg timestamp="20210529 23:10:48.365" level="TRACE">Arguments: [ 'select * from bootcamp.categories where category = %(category)s' | category='99' | categoryname='test' ]</msg>
<msg timestamp="20210529 23:10:48.365" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;Running PL/PGSQL statement&lt;/summary&gt;&lt;p&gt;select * from bootcamp.categories where category = %(category)s&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210529 23:10:48.372" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;SQL Query Result&lt;/summary&gt;&lt;p&gt;[{&amp;#x27;category&amp;#x27;: 99, &amp;#x27;categoryname&amp;#x27;: &amp;#x27;test&amp;#x27;}]&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210529 23:10:48.374" level="TRACE">Return: [{'category': 99, 'categoryname': 'test'}]</msg>
<msg timestamp="20210529 23:10:48.375" level="INFO">@{result} = [ {'category': 99, 'categoryname': 'test'} ]</msg>
<status status="PASS" starttime="20210529 23:10:48.365" endtime="20210529 23:10:48.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210529 23:10:48.376" level="TRACE">Arguments: [ [{'category': 99, 'categoryname': 'test'}] ]</msg>
<msg timestamp="20210529 23:10:48.376" level="INFO">[{'category': 99, 'categoryname': 'test'}]</msg>
<msg timestamp="20210529 23:10:48.377" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.375" endtime="20210529 23:10:48.377"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${SQL}</var>
<arg>delete from bootcamp.categories where category = %(category)s</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210529 23:10:48.377" level="TRACE">Arguments: [ 'delete from bootcamp.categories where category = %(category)s' ]</msg>
<msg timestamp="20210529 23:10:48.377" level="TRACE">Return: 'delete from bootcamp.categories where category = %(category)s'</msg>
<msg timestamp="20210529 23:10:48.377" level="INFO">${SQL} = delete from bootcamp.categories where category = %(category)s</msg>
<status status="PASS" starttime="20210529 23:10:48.377" endtime="20210529 23:10:48.377"/>
</kw>
<kw name="Execute Plpgsql Block" library="DB">
<var>@{result}</var>
<arg>${SQL}</arg>
<arg>&amp;{params}</arg>
<doc>PL/PGSQL block execution.
For parametrized SQL queries please consider psycopg2 guide on the subject:
http://initd.org/psycopg/docs/usage.html#passing-parameters-to-sql-queries</doc>
<msg timestamp="20210529 23:10:48.378" level="TRACE">Arguments: [ 'delete from bootcamp.categories where category = %(category)s' | category='99' | categoryname='test' ]</msg>
<msg timestamp="20210529 23:10:48.378" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;Running PL/PGSQL statement&lt;/summary&gt;&lt;p&gt;delete from bootcamp.categories where category = %(category)s&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210529 23:10:48.392" level="TRACE">Return: None</msg>
<msg timestamp="20210529 23:10:48.392" level="INFO">@{result} = [ ]</msg>
<status status="PASS" starttime="20210529 23:10:48.378" endtime="20210529 23:10:48.392"/>
</kw>
<kw name="Test Teardown" type="TEARDOWN">
<msg timestamp="20210529 23:10:48.393" level="TRACE">Arguments: [  ]</msg>
<kw name="Delete All Sessions" library="Req">
<doc>Removes all the session objects</doc>
<msg timestamp="20210529 23:10:48.394" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20210529 23:10:48.394" level="INFO">Deleting All Sessions</msg>
<msg timestamp="20210529 23:10:48.394" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.393" endtime="20210529 23:10:48.394"/>
</kw>
<kw name="Disconnect From Postgresql" library="DB">
<doc>Close active PostgreSQL connection.
You will have to manually open or switch to a new connection.
Due to how ConnectionCache works, connection's index and alias are not removed from cache, so you are able to switch to
closed connection, if it was closed with Disconnect from Postgresql. It will still remain closed though.</doc>
<msg timestamp="20210529 23:10:48.394" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20210529 23:10:48.396" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.394" endtime="20210529 23:10:48.396"/>
</kw>
<msg timestamp="20210529 23:10:48.396" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20210529 23:10:48.392" endtime="20210529 23:10:48.396"/>
</kw>
<status status="PASS" starttime="20210529 23:10:48.264" endtime="20210529 23:10:48.396"/>
</test>
<doc>Suite description</doc>
<status status="PASS" starttime="20210529 23:10:47.734" endtime="20210529 23:10:48.397"/>
</suite>
<status status="PASS" starttime="20210529 23:10:47.691" endtime="20210529 23:10:48.398"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="Venv">Venv</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Test2">Venv.Test2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
